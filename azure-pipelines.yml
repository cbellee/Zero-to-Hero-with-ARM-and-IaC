# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  resource_group: 'armdemo-rg'
  location: 'Australia East'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: BuildCode
    displayName: Build Code
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        workingDirectory: '$(Pipeline.Workspace)/hello_fasttrack_azure'
        arguments: '--configuration $(buildConfiguration)' 
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'artifacts'
    
  - job: BuildInfra
    displayName: Build Infrastructure
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: '$(azure_service_connection)'
        subscriptionId: '$(subscription_id)'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resource_group)'
        location: '$(location)'
        templateLocation: 'Linked artifact'
        csmFile: '$(Pipeline.Workspace)/arm_templates/deployment.json'
        csmParametersFile: '$(Pipeline.Workspace)/arm_templates/deployment.parameters.json'
        deploymentMode: 'Incremental'
    

- stage: Release
  displayName: Release
  dependsOn: Build
  jobs:
  - deployment: test
    displayName: deploy to test
    environment: test
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'victorviriya_azure'
              appType: 'webAppLinux'
              WebAppName: '$(app_service_name)'
              deployToSlotOrASE: true
              ResourceGroupName: '$(resource_group)'
              SlotName: '$(Environment.Name)'
              packageForLinux: '$(Pipeline.Workspace)/artifacts/**/*.zip'
              RuntimeStack: 'DOTNETCORE|3.1'
  - deployment: prod
    displayName: deploy to production

    environment: prod
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'victorviriya_azure'
              appType: 'webAppLinux'
              WebAppName: '$(app_service_name)'
              deployToSlotOrASE: true
              ResourceGroupName: '$(resource_group)'
              SlotName: '$(Environment.Name)'
              packageForLinux: '$(Pipeline.Workspace)/artifacts/**/*.zip'
              RuntimeStack: 'DOTNETCORE|3.1'

